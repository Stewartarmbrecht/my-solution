{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "test",
			"type": "nx",
			"project": "",
			"command": "run-many",
			"flags": ["-t test"],
			"problemMatcher": [],
			"detail": "Run all unit tests."
		},
		{
			"label": "test-myapp",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["my-app:test"],
			"problemMatcher": [],
			"detail": "Run all unit tests in the my-app project."
		},
		{
			"label": "test-mysite",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["my-site:test"],
			"problemMatcher": [],
			"detail": "Run all unit tests in the my-site project."
		},
		{
			"label": "test-features",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["features:test"],
			"problemMatcher": [],
			"detail": "Run all unit tests in the features project."
		},
		{
			"label": "test-backend",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["backend:test"],
			"problemMatcher": [],
			"detail": "Run all unit tests in the backend project."
		},
		{
			"label": "test-shared",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["shared:test"],
			"problemMatcher": [],
			"detail": "Run all unit tests in the shared project."
		},
		{
			"label": "test-state",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["state:test"],
			"problemMatcher": [],
			"detail": "Run all unit tests in the state project."
		},
		{
			"label": "test-coverage",
			"type": "nx",
			"project": "",
			"command": "run-many",
			"flags": ["-t test-coverage"],
			"problemMatcher": [],
			"detail": "Run all unit tests with code coverage enforced."
		},
		{
			"label": "test-features-coverage",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["features:test-coverage"],
			"problemMatcher": [],
			"detail": "Run all unit tests with code coverage enforced for the features project."
		},
		{
			"label": "test-myapp-coverage",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["my-app:test-coverage"],
			"problemMatcher": [],
			"detail": "Run all unit tests with code coverage enforced for the my-app project."
		},
		{
			"label": "test-mysite-coverage",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["my-site:test-coverage"],
			"problemMatcher": [],
			"detail": "Run all unit tests with code coverage enforced for the my-site project."
		},
		{
			"label": "test-shared-coverage",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["shared:test-coverage"],
			"problemMatcher": [],
			"detail": "Run all unit tests with code coverage enforced for the shared project."
		},
		{
			"label": "test-backend-coverage",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["backend:test-coverage"],
			"problemMatcher": [],
			"detail": "Run all unit tests with code coverage enforced for the backend project."
		},
		{
			"label": "test-state-coverage",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["state:test-coverage"],
			"problemMatcher": [],
			"detail": "Run all unit tests with code coverage enforced for the state project."
		},
		{
			"label": "build-prebuild-myapp-clean",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["my-app:prebuild", "--clean"],
			"problemMatcher": [],
			"detail": "Runs expo prebuild with the --clean flag."
		},
		{
			"label": "build-myapp-dev",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["my-app:eas-build-dev"],
			"problemMatcher": [],
			"detail": "Build the development version of the app in eas for both ios and android."
		},
		{
			"label": "build-myapp-preview",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["my-app:eas-build-preview"],
			"problemMatcher": [],
			"detail": "Build the preview version of the app in eas for both ios and android."
		},
		{
			"label": "build-myapp-preview-android-local",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["my-app:eas-build-preview-android-local"],
			"problemMatcher": [],
			"detail": "Build the preview version of the app locally using eas for android."
		},
		{
			"label": "build-myapp-local-dev-android",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app:local-build-dev-android",
			"problemMatcher": [],
			"detail": "Locally builds the android version of the app using eas.  Use this before running detox on dev instances."
		},
		{
			"label": "run-myapp-android-geny",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["my-app:run-android-geny"],
			"problemMatcher": [],
			"detail": "Run a dev cloud instance of geny android emulator then start the metro bundler and deploy to it."
		},
		{
			"label": "run-myapp",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app:start-ip",
			"flags": [],
			"problemMatcher": [],
			"detail": "Run the metro bundler on the current host ip port 19001."
		},
		{
			"label": "run-myapp-for-detox",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app:start-detox",
			"flags": [],
			"problemMatcher": [],
			"detail": "Run the metro bundler on localhost ip port 19002."
		},
		{
			"label": "test-myapp-open-e2e-web",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app-e2e:test-e2e-web-open",
			"flags": [],
			"problemMatcher": [],
			"detail": "Open the web test runner."
		},
		{
			"label": "test-myapp-e2e-web-current-spec",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app-e2e:test-e2e-web",
      "flags": ["--spec=${file}"],
			"problemMatcher": [],
			"detail": "Run the current spec file in the web test runner."
		},
		{
			"label": "test-myapp-e2e-web",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app-e2e:test-e2e-web",
      "flags": [],
			"problemMatcher": [],
			"detail": "Run all end to end web tests."
		},
		{
			"label": "build-myapp-dev-detox",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app-e2e:build-android",
      "flags": ["--configuration=attached-debug"],
			"problemMatcher": [],
			"detail": "Build a dev version of the app ready for detox testing."
		},
		{
			"label": "build-myapp-release-detox",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app-e2e:build-android",
      "flags": ["--configuration=genymotion-release"],
			"problemMatcher": [],
			"detail": "Build a release version of the app ready for detox testing."
		},
		{
			"label": "test-myapp-e2e-mobile-current-spec",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app-e2e:test-e2e-mobile-debug",
      "flags": ["${file}"],
			"problemMatcher": [],
			"detail": "Launch Genymotion emulator, install the app, and run the current test file in the mobile app test runner."
		},
		{
			"label": "test-myapp-e2e-mobile-current-spec-reuse",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app-e2e:test-e2e-mobile-debug",
      "flags": ["${file}", "--reuse"],
			"problemMatcher": [],
			"detail": "Launch Genymotion emulator, install the app, and run the current test file in the mobile app test runner."
		},
		{
			"label": "test-myapp-e2e-mobile-debug",
			"detail": "Launch Genymotion emulator, install the app, and run all mobile app tests.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app-e2e:test-e2e-mobile-debug",
			"flags": [],
			"problemMatcher": []
		},
		{
			"label": "test-myapp-e2e-mobile-debug-reuse",
			"detail": "Launch Genymotion emulator, install the app, and run all mobile app tests.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app-e2e:test-e2e-mobile-debug-reuse",
			"flags": [],
			"problemMatcher": []
		},
		{
			"label": "test-myapp-e2e-mobile-release",
			"detail": "Launch Genymotion emulator, install the app, and run all mobile app tests.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app-e2e:test-e2e-mobile-release",
			"flags": [],
			"problemMatcher": []
		},
		{
      "label": "dependencies-check",
			"detail": "Checks the npm dependency versions for updates.  Also checks the version match for expo.",
      "type": "shell",
      "command": "npx npm-check-updates && npx nx install my-app --check",
      "problemMatcher": []
    },
		{
      "label": "dependencies-install",
			"detail": "Installs one or more dependencies into the my-app project.",
      "type": "shell",
      "command": "npm install",
      "problemMatcher": []
    },
		{
      "label": "dependencies-install-myapp",
			"detail": "Installs one or more dependencies into the my-app project.",
      "type": "shell",
      "command": "npx nx install my-app ${input:dependencies}",
      "problemMatcher": []
    },
		{
      "label": "dependencies-nx-migrate",
			"detail": "Upgrades nx to the latest version and all of it's modules.",
      "type": "shell",
      "command": "npx nx migrate latest",
      "problemMatcher": []
    },
		{
			"label": "build-mysite-dev",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["my-site:eas-build-dev"],
			"problemMatcher": [],
			"detail": "Build the development version of the app in eas for both ios and android."
		},
		{
			"label": "build-mysite-preview",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["my-site:eas-build-preview"],
			"problemMatcher": [],
			"detail": "Build the preview version of the app in eas for both ios and android."
		},
		{
			"label": "build-mysite-local-dev-android",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site:local-build-dev-android",
			"problemMatcher": [],
			"detail": "Locally builds the android version of the app using eas.  Use this before running detox on dev instances."
		},
		{
			"label": "run-mysite-android-geny",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["my-site:run-android-geny"],
			"problemMatcher": [],
			"detail": "Run a dev cloud instance of geny android emulator then start the metro bundler and deploy to it."
		},
		{
			"label": "run-mysite",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site:start-ip",
			"flags": [],
			"problemMatcher": [],
			"detail": "Run the metro bundler on the current host ip port 19001."
		},
		{
			"label": "run-mysite-for-detox",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site:start-detox",
			"flags": [],
			"problemMatcher": [],
			"detail": "Run the metro bundler on localhost ip port 19002."
		},
		{
			"label": "test-mysite-open-e2e-web",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site-e2e:test-e2e-web-open",
			"flags": [],
			"problemMatcher": [],
			"detail": "Open the web test runner."
		},
		{
			"label": "test-mysite-e2e-web-current-spec",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site-e2e:test-e2e-web",
      "flags": ["--spec=${file}"],
			"problemMatcher": [],
			"detail": "Run the current spec file in the web test runner."
		},
		{
			"label": "test-mysite-e2e-web",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site-e2e:test-e2e-web",
      "flags": [],
			"problemMatcher": [],
			"detail": "Run all end to end web tests."
		},
		{
			"label": "build-mysite-dev-detox",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site-e2e:build-android",
      "flags": ["--configuration=genymotion"],
			"problemMatcher": [],
			"detail": "Build a dev version of the app ready for detox testing."
		},
		{
			"label": "build-mysite-release-detox",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site-e2e:build-android",
      "flags": ["--configuration=genymotion-release"],
			"problemMatcher": [],
			"detail": "Build a release version of the app ready for detox testing."
		},
		{
			"label": "test-mysite-e2e-mobile-current-spec",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site-e2e:test-e2e-mobile",
      "flags": ["${file}"],
			"problemMatcher": [],
			"detail": "Launch Genymotion emulator, install the app, and run the current test file in the mobile app test runner."
		},
		{
			"label": "test-mysite-e2e-mobile-debug",
			"detail": "Launch Genymotion emulator, install the app, and run all mobile app tests.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site-e2e:test-e2e-mobile-debug",
			"flags": [],
			"problemMatcher": []
		},
		{
			"label": "test-mysite-e2e-mobile-debug-reuse",
			"detail": "Launch Genymotion emulator, install the app, and run all mobile app tests.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site-e2e:test-e2e-mobile-debug-reuse",
			"flags": [],
			"problemMatcher": []
		},
		{
			"label": "test-mysite-e2e-mobile-release",
			"detail": "Launch Genymotion emulator, install the app, and run all mobile app tests.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site-e2e:test-e2e-mobile-release",
			"flags": [],
			"problemMatcher": []
		},
		{
      "label": "build-mysite-check-dependencies",
			"detail": "Checks the npm dependency versions for updates.  Also checks the version match for expo.",
      "type": "shell",
      "command": "npx npm-check-updates && npx nx install my-site --check",
      "problemMatcher": []
    },
		{
      "label": "build-mysite-install-dependencies",
			"detail": "Installs one or more dependencies into the my-site project.",
      "type": "shell",
      "command": "npx nx install my-site ${input:dependencies}",
      "problemMatcher": []
    },
    {
      "label": "login-genymotion",
			"detail": "Sets auth token for accessing genymotion.",
      "type": "shell",
			"args": ["auth", "token", "${input:token}"],
      "command": "gmsaas",
      "problemMatcher": []
    }
	],
  "inputs": [
    {
      "id": "dependencies",
      "type": "promptString",
      "description": "Enter a space separate list of dependencies to install.",
    },
		{
			"id": "token",
			"type": "promptString",
			"description": "Enter Genymotion token.",
			"default": ""
		}
	]
}