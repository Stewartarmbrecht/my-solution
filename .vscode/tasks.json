{
	"version": "2.0.0",
	"tasks": [

		// DEPENDENCY MANAGEMENT
		{
      "label": "Install dependencies",
			"detail": "Runs npm install to install all dependencies.",
      "type": "shell",
      "command": "npm install",
      "problemMatcher": []
    },
		{
      "label": "Check dependencies",
			"detail": "Checks the npm dependency versions for updates.  Also checks the version match for expo modules for my-app and my-site.",
      "type": "shell",
      "command": "npx nx deps-check",
      "problemMatcher": []
    },
		{
      "label": "Install new dependencies",
			"detail": "Installs one or more dependencies into a specific project.",
      "type": "shell",
      "command": "npx nx install ${input:project} ${input:dependencies}",
      "problemMatcher": []
    },
		{
      "label": "Migrate NX depencies",
			"detail": "Upgrades nx to the latest version and all of it's modules.",
      "type": "shell",
      "command": "npx nx migrate latest --run-migrations",
      "problemMatcher": []
    },
		{
      "label": "Sort dependencies",
			"detail": "Sorts dependencies in all package.json files.",
      "type": "shell",
      "command": "npx nx deps-sort",
      "problemMatcher": []
    },

		// CONNECT
		{
			"label": "Connect mobile device",
			"detail": "Connects to you android device over wifi using the IP you updated in the project and port 5555.",
      "type": "shell",
      "command": "npx nx connect-mobile",
      "problemMatcher": []
		},

		// RUN
		{
			"label": "Build and run mobile",
			"detail": "Builds and runs an Android version of the app on a connected Android device.  Be sure to run connect-mobile first.",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["${input:mobile-project}:run-mobile"],
			"problemMatcher": []
		},
		{
			"label": "Build and run mobile (preview)",
			"detail": "Builds and runs an Android, release version of the app on a connected Android device.  Be sure to run connect-mobile first.",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["${input:mobile-project}:run-mobile-preview"],
			"problemMatcher": []
		},

		// START
		{
			"label": "Start server for app (metro)",
			"detail": "Starts the metro bundler for the app project.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-app:start",
			"flags": [],
			"problemMatcher": [],
		},
		{
			"label": "Start server for site (metro)",
			"detail": "Starts the metro bundler for the site project.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-site:start",
			"flags": [],
			"problemMatcher": []
		},
		{
			"label": "Start server for admin (metro)",
			"detail": "Starts the metro bundler for the admin project.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "my-admin:start",
			"flags": [],
			"problemMatcher": []
		},
		{
			"label": "Start web test studio (Cypress)",
			"detail": "Starts the Cypress web test studio for my-app (in my-app-e2e project).",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:mobile-project}-e2e:start-web-test-studio",
			"flags": [],
			"problemMatcher": []
		},
		{
			"label": "Start mobile test studio (Maestro)",
			"detail": "Starts the Maestro web test studio for my-app (in my-app-e2e project).",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:mobile-project}-e2e:start-mobile-test-studio",
			"flags": [],
			"problemMatcher": []
		},
		{
			"label": "Start server to view unit test coverage",
			"detail": "Starts http server to view unit test coverage results.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:project}:start-coverage-server",
			"flags": [],
			"problemMatcher": []
		},

		// DEVELOPMENT
		{
			"label": "Generate backend model",
			"detail": "Generates types from the graphql.schema file.  Run this after changing the file.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "backend:amplify-codegen-models",
      "flags": [],
			"problemMatcher": []
		},


		// TEST
		{
			"label": "Run mobile tests in current file",
			"detail": "Run the mobile test for the currently viewed file.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "test-mobile",
      "flags": ["-e PASSWORD=${input.password}", "${file}"],
			"problemMatcher": []
		},
		{
			"label": "Run unit tests for select project",
			"detail": "Run unit tests for a single project.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:project}:test",
			"problemMatcher": []
		},
		{
			"label": "Run unit tests for select project with coverage",
			"detail": "Run unit tests for a single project with code coverage enforced.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:project}:test-coverage",
			"problemMatcher": []
		},
		{
			"label": "Run web tests for select project",
			"detail": "Runs all web tests for a project you select.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:mobile-project}-e2e:test-web",
			"problemMatcher": []
		},
		{
			"label": "Run mobile tests for select project",
			"detail": "Runs all mobile tests for a project you select.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:mobile-project}-e2e:test-mobile -e PASSWORD=${input:password}",
			"problemMatcher": []
		},
		{
			"label": "Run mobile tests for select project (release)",
			"detail": "Runs all mobile tests for a project you select using the release version of the app.  Build and run mobile (release) first.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:mobile-project}-e2e:test-mobile-release -e PASSWORD=${input:password}",
			"problemMatcher": []
		},
		{
			"label": "Run all unit tests",
			"detail": "Run all unit tests for all projects.",
			"type": "nx",
			"project": "",
			"command": "run-many",
			"positional": "-t test",
			"problemMatcher": []
		},
		{
			"label": "Run all unit tests with coverage",
			"detail": "Run all unit tests for all projects with coverage.",
			"type": "nx",
			"project": "",
			"command": "run-many",
			"positional": "-t test-coverage",
			"problemMatcher": []
		},
		{
			"label": "Run all mobile tests",
			"detail": "Run ALL mobile tests for all projects.",
			"type": "nx",
			"project": "",
			"command": "run-many",
			"positional": "-t=test-mobile",
			"problemMatcher": []
		},
		{
			"label": "Run all web tests",
			"detail": "Run web tests for a single project.",
			"type": "nx",
			"project": "",
			"command": "run-many",
			"positional": "-t=test-web",
			"problemMatcher": []
		}
	],
  "inputs": [
    {
      "id": "dependencies",
      "type": "promptString",
      "description": "Enter a comma separate list of dependencies to install.",
    },
    {
			"id": "project",
			"type": "pickString",
			"description": "Select a project",
			"options": ["my-app", "my-app-e2e", "my-admin", "my-admin-e2e", "my-site", "my-site-e2e", "backend", "features", "shared", "state", "ui"],
			"default": "my-app"
    },
    {
			"id": "mobile-project",
			"type": "pickString",
			"description": "Select a project",
			"options": ["my-app", "my-admin", "my-site"],
			"default": "my-app"
    },
		{
			"id": "password",
			"type": "promptString",
			"description": "Enter test account password.",
			"default": ""
		},
		{
			"id": "token",
			"type": "promptString",
			"description": "Enter Genymotion token.",
			"default": ""
		}
	]
}