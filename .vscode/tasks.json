{
	"version": "2.0.0",
	"tasks": [

		// DEPENDENCY MANAGEMENT
		{
      "label": "deps-install",
			"detail": "Runs npm install to install all dependencies.",
      "type": "shell",
      "command": "npm install",
      "problemMatcher": []
    },
		{
      "label": "deps-check",
			"detail": "Checks the npm dependency versions for updates.  Also checks the version match for expo modules for my-app and my-site.",
      "type": "shell",
      "command": "npx nx deps-check",
      "problemMatcher": []
    },
		{
      "label": "deps-new",
			"detail": "Installs one or more dependencies into a specific project.",
      "type": "shell",
      "command": "npx nx install ${input:project} ${input:dependencies}",
      "problemMatcher": []
    },
		{
      "label": "deps-migrate-nx",
			"detail": "Upgrades nx to the latest version and all of it's modules.",
      "type": "shell",
      "command": "npx nx migrate latest --run-migrations",
      "problemMatcher": []
    },
		{
      "label": "deps-sort",
			"detail": "Sorts dependencies in all package.json files.",
      "type": "shell",
      "command": "npx nx deps-sort",
      "problemMatcher": []
    },

		// CONNECT
		{
			"label": "connect-mobile",
			"detail": "Connects to you android device over wifi using the IP you updated in the project and port 5555.",
      "type": "shell",
      "command": "npx nx connect-mobile",
      "problemMatcher": []
		},

		// RUN
		{
			"label": "run-mobile",
			"detail": "Builds and runs an Android version of the app on a connected Android device.  Be sure to run connect-mobile first.",
			"type": "nx",
			"project": "",
			"command": "run",
			"flags": ["${input:mobile-project}:run-mobile"],
			"problemMatcher": []
		},

		// START
		{
			"label": "start-server",
			"detail": "Starts the metro bundler for a mobile project.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:mobile-project}:start",
			"flags": [],
			"problemMatcher": []
		},
		{
			"label": "start-web-test-studio",
			"detail": "Starts the Cypress web test studio for my-app (in my-app-e2e project).",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "{input:mobile-project}-e2e:start-web-test-studio",
			"flags": [],
			"problemMatcher": []
		},
		{
			"label": "start-mobile-test-studio",
			"detail": "Starts the Maestro web test studio for my-app (in my-app-e2e project).",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "{input:mobile-project}-e2e:start-mobile-test-studio",
			"flags": [],
			"problemMatcher": []
		},

		// TEST
		{
			"label": "test-mobile-current-file",
			"detail": "Run the mobile test for the currently viewed file.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "test-mobile",
      "flags": ["${file}"],
			"problemMatcher": []
		},
		{
			"label": "test-unit-project",
			"detail": "Run unit tests for a single project.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:project}:test",
			"problemMatcher": []
		},
		{
			"label": "test-unit-coverage-project",
			"detail": "Run unit tests for a single project with code coverage enforced.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:project}:test-coverage",
			"problemMatcher": []
		},
		{
			"label": "test-web-project",
			"detail": "Run web tests for a single project.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:mobile-project}-e2e:test-web",
			"problemMatcher": []
		},
		{
			"label": "test-mobile-project",
			"detail": "Run mobile tests for a single project.",
			"type": "nx",
			"project": "",
			"command": "run",
			"positional": "${input:mobile-project}-e2e:test-mobile",
			"problemMatcher": []
		},
		{
			"label": "test-unit",
			"detail": "Run all unit tests for all projects.",
			"type": "nx",
			"project": "",
			"command": "run-many",
			"positional": "-t test",
			"problemMatcher": []
		},
		{
			"label": "test-unit-coverage",
			"detail": "Run all unit tests for all projects with coverage.",
			"type": "nx",
			"project": "",
			"command": "run-many",
			"positional": "-t test-coverage",
			"problemMatcher": []
		}
	],
  "inputs": [
    {
      "id": "dependencies",
      "type": "promptString",
      "description": "Enter a comma separate list of dependencies to install.",
    },
    {
			"id": "project",
			"type": "pickString",
			"description": "Select a project",
			"options": ["my-app", "my-app-e2e", "my-site", "my-site-e2e", "backend", "features", "shared", "state", "ui"],
			"default": "my-app"
    },
    {
			"id": "mobile-project",
			"type": "pickString",
			"description": "Select a project",
			"options": ["my-app", "my-site"],
			"default": "my-app"
    },
		{
			"id": "token",
			"type": "promptString",
			"description": "Enter Genymotion token.",
			"default": ""
		}
	]
}